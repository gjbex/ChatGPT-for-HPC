Consider the following Python class definition:

class Pixel:

    def __init__(self, color, pos):
        '''Construct a pixel with a given color and position

        Parameters
        ----------
        color: str
            A string of the format '#rrggbb' where 'rr' denotes the red color value
            in hexadecimal, 'gg' the green color and 'bb' the blue color
        pos: tuple[int, int]
            The position of the pixel as a tuple of x and y coordinates as positive
            integers
        '''
        self._color = color
        self._pos = pos

    @property
    def red(self):
        '''Return red color value in range [0, 255]

        Returns
        -------
        int
            red color value in ragne [0, 255]
        '''
        return int(self._color[1:3], 16)

    @property
    def green(self):
        '''Return green color value in range [0, 255]

        Returns
        -------
        int
            green color value in ragne [0, 255]
        '''
        return int(self._color[3:5], 16)

    @property
    def blue(self):
        '''Return blue color value in range [0, 255]

        Returns
        -------
        int
            blue color value in ragne [0, 255]
        '''
        return int(self._color[5:7], 16)

    @property
    def x(self):
        '''Return x coordinate of the pixel

        Returns
        -------
        int
            x coordinate
        '''
        return self._pos[0]

    @property
    def y(self):
        '''Return y coordinate of the pixel

        Returns
        -------
        int
            y coordinate
        '''
        return self._pos[1]

    def __repr__(self):
        return f'({self.x}, {self.y}): {self._color}'


Can you translate this Python class to a C++ class?
